{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { RestUtil } from './rest-util';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let BookService = /*#__PURE__*/(() => {\n  class BookService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.backendUrl + '/api/book';\n    }\n    getBooks(filter) {\n      const url = this.baseUrl + '/getBooks';\n      const params = RestUtil.buildParamsFromPageRequest(filter);\n      return this.http.get(url, {\n        params\n      });\n    }\n    getBook(bookId) {\n      const url = this.baseUrl + '/getBook';\n      const params = new HttpParams().set('bookId', bookId);\n      return this.http.get(url, {\n        params\n      });\n    }\n    saveBook(book) {\n      const url = this.baseUrl + '/saveBook';\n      return this.http.post(url, book);\n    }\n    deleteBook(bookId) {\n      const url = this.baseUrl + '/deleteBook';\n      const params = new HttpParams().set('bookId', bookId);\n      return this.http.delete(url, {\n        params\n      });\n    }\n  }\n  BookService.ɵfac = function BookService_Factory(t) {\n    return new (t || BookService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  BookService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BookService,\n    factory: BookService.ɵfac,\n    providedIn: 'root'\n  });\n  return BookService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}