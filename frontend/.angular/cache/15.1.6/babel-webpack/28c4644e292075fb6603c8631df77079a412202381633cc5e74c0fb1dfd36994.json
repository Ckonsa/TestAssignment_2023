{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { map, switchMap } from 'rxjs/operators';\nimport { first } from 'rxjs';\nimport { ConfirmationDialogComponent } from '../confirmation-dialog/confirmation-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/checkout.service\";\nimport * as i3 from \"../../services/book.service\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nfunction CheckoutBookComponent_form_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 2);\n    i0.ɵɵlistener(\"ngSubmit\", function CheckoutBookComponent_form_1_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.checkoutConfirm());\n    });\n    i0.ɵɵelementStart(1, \"label\");\n    i0.ɵɵtext(2, \"First Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 3);\n    i0.ɵɵelementStart(4, \"label\");\n    i0.ɵɵtext(5, \"Last Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 4);\n    i0.ɵɵelementStart(7, \"label\");\n    i0.ɵɵtext(8, \"Book\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 5)(10, \"input\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const book_r1 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.checkoutBookForm);\n    i0.ɵɵadvance(9);\n    i0.ɵɵpropertyInterpolate(\"value\", book_r1.title);\n  }\n}\nexport let CheckoutBookComponent = /*#__PURE__*/(() => {\n  class CheckoutBookComponent {\n    constructor(route, checkoutService, bookService, dialog) {\n      this.route = route;\n      this.checkoutService = checkoutService;\n      this.bookService = bookService;\n      this.dialog = dialog;\n      this.checkoutBookForm = new FormGroup({\n        fname: new FormControl('', Validators.required),\n        lname: new FormControl('', Validators.required)\n      });\n    }\n    ngOnInit() {\n      this.book$ = this.route.params.pipe(map(params => params.id)).pipe(switchMap(id => this.bookService.getBook(id)));\n      this.book$.pipe(first()).subscribe(book => {\n        if (!(book instanceof Error)) {\n          this.book = book;\n        }\n      });\n    }\n    checkoutConfirm() {\n      // Got the code and idea from here: https://www.javachinna.com/angular-confirmation-dialog/\n      const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\n        data: {\n          message: 'Are you sure that you want to checkout?'\n        }\n      });\n      dialogRef.afterClosed().subscribe(confirmed => {\n        if (confirmed) {\n          this.checkoutBook();\n        }\n      });\n    }\n    checkoutBook() {\n      const todaysDate = new Date();\n      const tomorrowsDate = new Date(todaysDate.setDate(todaysDate.getDate() + 1));\n      const checkout = {\n        id: null,\n        borrowerFirstName: this.checkoutBookForm.value.fname,\n        borrowerLastName: this.checkoutBookForm.value.lname,\n        borrowedBook: this.book.id,\n        checkedOutDate: todaysDate.toString().slice(0, 10),\n        dueDate: tomorrowsDate.toString().slice(0, 10)\n      };\n      this.checkoutService.saveCheckout(checkout);\n      this.dialog.open(ConfirmationDialogComponent, {\n        data: {\n          message: 'Book \"' + this.book + '\" has been checkout out. Due date is ' + tomorrowsDate.toString() + '.',\n          buttonText: {\n            ok: 'OK',\n            cancel: 'noMessage'\n          }\n        }\n      });\n    }\n  }\n  CheckoutBookComponent.ɵfac = function CheckoutBookComponent_Factory(t) {\n    return new (t || CheckoutBookComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.CheckoutService), i0.ɵɵdirectiveInject(i3.BookService), i0.ɵɵdirectiveInject(i4.MatDialog));\n  };\n  CheckoutBookComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CheckoutBookComponent,\n    selectors: [[\"app-checkout-book\"]],\n    decls: 3,\n    vars: 3,\n    consts: [[1, \"container\", \"mat-elevation-z4\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"placeholder\", \"Your First Name...\", \"formControlName\", \"fname\"], [\"type\", \"text\", \"placeholder\", \"Your Last Name...\", \"formControlName\", \"lname\"], [\"type\", \"text\", \"disabled\", \"\", 3, \"value\"], [\"type\", \"submit\", \"value\", \"CHECKOUT\"]],\n    template: function CheckoutBookComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, CheckoutBookComponent_form_1_Template, 11, 2, \"form\", 1);\n        i0.ɵɵpipe(2, \"async\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 1, ctx.book$));\n      }\n    },\n    dependencies: [i5.NgIf, i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.FormGroupDirective, i6.FormControlName, i5.AsyncPipe],\n    styles: [\".container[_ngcontent-%COMP%]{max-width:1024px;margin:3em auto;padding:2em}input[type=text][_ngcontent-%COMP%], select[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%]{width:100%;padding:12px;border:1px solid #ccc;border-radius:4px;box-sizing:border-box;margin-top:6px;margin-bottom:16px;resize:vertical}input[type=submit][_ngcontent-%COMP%]{background-color:#6f1bce;color:#fff;padding:12px 20px;border:none;border-radius:4px;cursor:pointer}input[type=submit][_ngcontent-%COMP%]:hover{background-color:#8143c9}\"]\n  });\n  return CheckoutBookComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}